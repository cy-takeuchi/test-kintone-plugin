on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: 18
      - name: Build kintone plugin
        if: ${{ steps.release.outputs.release_created }}
        run: |
          plugin_name=mypluginname-ver${{ steps.release.outputs.tag_name }}.plugin.zip
          echo "plugin_name=$plugin_name" >> $GITHUB_ENV
          npm ci && npm install @kintone/plugin-packer
          cd src && npx kintone-plugin-packer --ppk ./private.ppk --out ${{ env.plugin_name }} .
      - name: Upload kintone plugin
        if: ${{ steps.release.outputs.release_created }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: cd src && gh release upload ${{ steps.release.outputs.tag_name }} ${{ env.plugin_name }}
      # - name: Build kintone plugin
      #   if: ${{ steps.release.outputs.release_created }}
      #   run: |
      #     npm ci && npm install @kintone/plugin-packer
      #     cd src && npx kintone-plugin-packer --ppk ./private.ppk --out ./mypluginname-ver${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}.plugin.zip .
      # - name: Upload kintone plugin
      #   if: ${{ steps.release.outputs.release_created }}
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: cd src && gh release upload ${{ steps.release.outputs.tag_name }} ./mypluginname-ver${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}.plugin.zip
